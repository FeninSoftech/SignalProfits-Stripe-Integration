@model SignalProfits.Web.Model.RestPassword
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .hpanel .panel-body {
        background: #f9f9f9 !important;
        border: 1px solid #e4e5e7 !important;
        border-radius: 2px !important;
        padding: 20px !important;
        position: relative !important;
    }

    .login-container {
        max-width: 420px !important;
        margin: auto !important;
        padding-top: 6% !important;
    }
</style>
<div class="login-container">
    <div class="row">
        <div class="col-md-12">
            @if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMsg))
            {
                <div class="form-group">
                    <div class="alert alert-success" id="cus-card-success-alert">
                        <button type="button" class="close" data-dismiss="alert">x</button>
                        <strong>Success! </strong>
                        @ViewBag.SuccessMsg
                    </div>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMsg))
            {
                <div class="form-group">
                    <div class="alert alert-danger" id="cus-card-error-alert">
                        <button type="button" class="close" data-dismiss="alert">x</button>
                        <strong>Error! </strong>
                        @ViewBag.ErrorMsg
                    </div>
                </div>
            }
            @if (!Model.IsLinkExpired)
            {
                <div class="text-center m-b-md">
                    <h3>RESET PASSWORD</h3>
                </div>
                <div class="hpanel">
                    <div class="panel-body">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "", id = "resetPassForm" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id);
                            @Html.HiddenFor(model => model.ActivationToken);
                            <div class="form-group col-lg-12">
                                <label>Password</label>
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", id = "password", required = "Password is required" })
                                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                                <b class="tooltip tooltip-bottom-right">Don't forget your password</b>
                            </div>
                            <div class="form-group col-lg-12">
                                <label>Re-Enter Password</label>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm password", id = "confirm_password", required = "Confirm Password is required" })
                                @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
                                <b class="tooltip tooltip-bottom-right">Don't forget your password</b>
                            </div>
                            <div class="form-group col-lg-12">
                                <button class="btn btn-success btn-block" type="submit">Reset</button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    var password = document.getElementById("password")
  , confirm_password = document.getElementById("confirm_password");

    function validatePassword() {
        if (password.value != confirm_password.value) {
            confirm_password.setCustomValidity("Passwords Don't Match");
        } else {
            confirm_password.setCustomValidity('');
        }
    }

    password.onchange = validatePassword;
    confirm_password.onkeyup = validatePassword;

    $("#cus-card-error-alert").fadeTo(2000, 500).slideUp(500, function () {
        $("#cus-card-error-alert").slideUp(500);
    });

</script>
