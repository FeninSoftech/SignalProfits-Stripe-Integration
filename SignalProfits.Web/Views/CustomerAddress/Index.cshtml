@model SignalProfits.Web.Model.CustomerAddress
@{
    Layout = null;}
<script src="~/Content/Scripts/jquery.validate.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.js"></script>
<div class="row">
    <div class="form-group col-lg-12">
        @if (@ViewBag.SuccessMessage != null)
        {
            <div class="form-group">
                <div class="alert alert-success" id="cus-card-success-alert">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <strong>Success! </strong>
                    @ViewBag.SuccessM-essage;
                </div>
            </div>
        }
        <div class="form-group">
            <div class="alert alert-danger" id="address-error-alert">
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong>
                Error in updating customer address!
            </div>
        </div>
        <div class="form-group">
            <label for="inputName">Name</label>
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Enter your name", id = "Name" , required = "Name name is required" })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="inputPhone">Phone No.</label>
            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", placeholder = "Enter your phone no", id = "Phone" })
        </div>
        <div class="form-group">
            <label for="inputAddressLine1">Address Line 1</label>
            @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control", placeholder = "Enter your Address Line 1", id = "AddressLine1", required = "Address name is required" })
            @Html.ValidationMessageFor(x => x.AddressLine1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="inputAddressLine2">Address Line 2</label>
            @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control", placeholder = "Enter your Addres sLine 2", id = "AddressLine2" })
        </div>
        <div class="form-group">
            <label for="inputCity">City</label>
            @Html.TextBoxFor(x => x.City, new { @class = "form-control", placeholder = "Enter your City", id = "City" })
        </div>
        <div class="form-group">
            <label for="inputZipCode">ZipCode</label>
            @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control", placeholder = "Enter your ZipCode", id = "ZipCode" })
        </div>
        <div class="form-group">
            <label for="inputState">State</label>
            @Html.TextBoxFor(x => x.State, new { @class = "form-control", placeholder = "Enter your State", id = "State" })
        </div>
        <div class="form-group">
            <label for="inputState">Country</label>
            @Html.TextBoxFor(x => x.Country, new { @class = "form-control", placeholder = "Enter your Country", id = "Country" })
        </div>
        <input type="hidden" id="CustomerId" name="CustomerId" value="@Model.CustomerId" />
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#address-success-alert").hide();
        $("#address-error-alert").hide();
    })
</script>
